<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('taut_shipping_methods', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('driver');
            $table->string('driver_channel');
            $table->string('driver_service')->nullable();
            $table->string('type');
            $table->boolean('is_active')->default(true);
            $table->boolean('is_cod')->default(false);

            $table->softDeletes();
            $table->timestamps();
        });

        Schema::create('taut_shippings', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('method_id');
            $table->string('driver_order_id')->nullable();
            $table->morphs('source');
            $table->string('trx_id')->unique();
            $table->string('method_name');
            $table->string('method_driver');
            $table->string('method_channel')->nullable();
            $table->string('method_service')->nullable();
            $table->string('status');
            $table->boolean('is_cod')->default(false);
            $table->string('awb')->nullable();
            $table->text('note')->nullable();

            $table->string('origin_contact_name');
            $table->string('origin_contact_email')->nullable();
            $table->string('origin_contact_phone')->nullable();
            $table->string('origin_contact_country');
            $table->string('origin_contact_province');
            $table->string('origin_contact_city');
            $table->string('origin_contact_district');
            $table->string('origin_contact_subdistrict');
            $table->string('origin_contact_address');
            $table->string('origin_contact_postal_code');
            $table->text('origin_contact_full_adress');
            $table->string('origin_latitude')->nullable();
            $table->string('origin_longitude')->nullable();

            $table->string('destination_contact_name');
            $table->string('destination_contact_email')->nullable();
            $table->string('destination_contact_phone')->nullable();
            $table->string('destination_contact_country');
            $table->string('destination_contact_province');
            $table->string('destination_contact_city');
            $table->string('destination_contact_district');
            $table->string('destination_contact_subdistrict');
            $table->string('destination_contact_address');
            $table->string('destination_contact_postal_code');
            $table->text('destination_contact_full_address');
            $table->string('destination_latitude')->nullable();
            $table->string('destination_longitude')->nullable();

            $table->double('package_price');
            $table->double('package_weight');
            $table->json('package_dimenstion')->nullable();
            $table->double('shipping_cost')->default(0);

            $table->timestamp('date');
            $table->timestamp('delivered_at')->nullable();
            $table->timestamp('last_check_status_at')->nullable();

            $table->json('dimension')->nullable();
            $table->json('meta')->nullable();
            $table->json('payload')->nullable();
            $table->json('response')->nullable();

            $table->softDeletes();
            $table->timestamps();

            $table->foreign('method_id')->references('id')->on('taut_shipping_methods');
        });
    }

    public function down()
    {
        Schema::dropIfExists('taut_shippings');
        Schema::dropIfExists('taut_shipping_methods');
    }
};
